{"version":3,"sources":["webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.ts","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/product-resolve.service.ts","webpack:///src/app/show-product-details/show-product-details.component.ts","webpack:///src/app/show-product-details/show-product-details.component.html","webpack:///src/app/add-new-product/add-new-product.component.ts","webpack:///src/app/add-new-product/add-new-product.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/_auth/auth.guard.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/drag.directive.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/_services/user-auth.service.ts","webpack:///src/app/forbidden/forbidden.component.ts","webpack:///src/app/forbidden/forbidden.component.html","webpack:///src/app/_services/product.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/image-processing.service.ts","webpack:///src/main.ts","webpack:///src/app/_auth/auth.interceptor.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserComponent","userService","forUser","subscribe","response","console","log","message","error","selector","templateUrl","styleUrls","ShowProductImagesDialogComponent","data","receieveImage","HomeComponent","productService","imageProcessingService","productDetails","getAllProducts","pipe","x","i","map","product","createImages","resp","environment","production","ProductResolveService","route","state","id","paramMap","get","getProductDetailsById","p","getProductDetails","productId","productName","productDescription","productDiscountedPrice","productActualPrice","productImages","providedIn","ShowProductDetailsComponent","imagesDialog","imageProcesingService","router","displayedColumns","deleteProductDetails","open","images","height","width","navigate","AddNewProductComponent","sanitizer","activatedRoute","isNewProduct","snapshot","productForm","productFormData","prepareFormData","addProduct","reset","formData","FormData","append","Blob","JSON","stringify","type","length","file","name","event","target","files","fileHandle","url","bypassSecurityTrustUrl","window","URL","createObjectURL","push","splice","fileDropped","onFileSelected","AppComponent","title","AdminComponent","AuthGuard","userAuthService","getToken","role","match","roleMatch","UserService","httpclient","PATH_OF_API","requestHeader","loginData","post","headers","responseType","allowedRoles","isMatch","userRoles","getRoles","j","roleName","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","DragDirective","background","evt","preventDefault","stopPropagation","dataTransfer","emit","onDragOver","onDragLeave","onDrop","HeaderComponent","isLoggedIn","clear","isAdmin","isUser","UserAuthService","roles","localStorage","setItem","parse","getItem","jwtToken","ForbiddenComponent","ProductService","httpClient","routes","path","component","canActivate","resolve","AppRoutingModule","forRoot","exports","LoginComponent","loginForm","login","value","setRoles","user","setToken","ImageProcessingService","productImagesToFileHandle","imageFileData","imageBlob","dataURItoBlob","picByte","imageFile","File","finalFileHandle","picBytes","imageType","byteString","atob","arrayBuffer","ArrayBuffer","int8Array","Uint8Array","charCodeAt","blob","bootstrapModule","err","AuthInterceptor","req","next","handle","clone","token","addToken","status","request","setHeaders","Authorization","webpackEmptyAsyncContext","Promise","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  message;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forUser();\r\n  }\r\n\r\n  forUser() {\r\n    this.userService.forUser().subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.message = response;\r\n      }, \r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding: 20px; color: red;\">\r\n        <h1>You are User</h1>\r\n        <h1>{{message}}</h1>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FileHandle } from '../_model/file-handle.model';\n\n@Component({\n  selector: 'app-show-product-images-dialog',\n  templateUrl: './show-product-images-dialog.component.html',\n  styleUrls: ['./show-product-images-dialog.component.css']\n})\nexport class ShowProductImagesDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.receieveImage();\n  }\n\n  receieveImage(){\n    console.log(this.data);\n    \n  }\n\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"1:1\">\n    <mat-grid-tile *ngFor=\"let fileHandle of data.images\">\n     <img [src]=\"fileHandle.url\" width=\"150px\" height=\"150px\">\n    </mat-grid-tile>\n    \n  </mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { Product } from '../_model/product.model';\r\nimport { ImageProcessingService } from '../image-processing.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  productDetails= [];\r\n\r\n  constructor(private productService: ProductService,private imageProcessingService: ImageProcessingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProducts()\r\n  }\r\n\r\n  public getAllProducts(){\r\n    this.productService.getAllProducts()\r\n    .pipe(\r\n      map((x: Product[], i) => x.map((product: Product)=> this.imageProcessingService.createImages(product)))\r\n    )\r\n    .subscribe(\r\n      (resp: Product[])=>{\r\n        console.log(resp);\r\n        this.productDetails=resp;\r\n\r\n      },(error: HttpErrorResponse)=>{\r\n        console.log(error);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n   <mat-grid-list cols=\"4\" rowHeight=\"2:3\" guttersize=\"10\">\r\n      <mat-grid-tile *ngFor=\"let p of productDetails\">\r\n      <div class=\"row p-5\">\r\n         <div class=\"image-container\">\r\n            <img class=\"home-page-product-image\" [src]=\"p.productImages[0].url\" >\r\n         </div>\r\n           <div class=\"mt-3\">\r\n            <p><b>{{p.productName}}</b></p>\r\n           </div>\r\n\r\n           <div class=\"mt-2\">\r\n            <p style=\"white-space: inherit; height: 40px; width: 288px; overflow: hidden; text-overflow: ellipsis;\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Voluptatem iste, veritatis doloremque quos impedit recusandae sequi, aspernatur nesciunt maxime incidunt eaque voluptas suscipit aliquam consectetur officiis sed vero facilis ipsam.</p>\r\n           </div>\r\n           <div class=\"mt-2\">\r\n            <p><b>Rs. {{p.productDiscountedPrice}}</b>  &nbsp; <b style=\"text-decoration: line-through;\">{{p.productActualPrice}}</b></p>\r\n           </div>\r\n\r\n           <div class=\"mt-2\">\r\n            <button type=\"button\" mat-raised-button color=\"warn\">View Details...</button>\r\n           </div>\r\n\r\n         \r\n      </div>\r\n   </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Product } from './_model/product.model';\nimport { Observable, of } from 'rxjs';\nimport { ProductService } from './_services/product.service';\nimport { ImageProcessingService } from './image-processing.service';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolveService implements Resolve<Product> {\n\n  constructor(private productService: ProductService, private imageProcessingService: ImageProcessingService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product>{ \n         const id=route.paramMap.get(\"productId\");\n\n         if(id){\n          //then we have to fetch detail from backend  \n          return this.productService.getProductDetailsById(id)\n          .pipe(\n            map(p=> this.imageProcessingService.createImages(p))\n          );\n         } else{\n          // return empty product observvable\n\n          return of(this.getProductDetails());\n         }\n  }\n\n  getProductDetails(){\n    return {\n      productId: null,\n      productName: \"\",\n      productDescription: \"\",\n      productDiscountedPrice: 0,\n      productActualPrice: 0,\n      productImages: [],\n    };\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../_services/product.service';\nimport { Product } from '../_model/product.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { error } from '@angular/compiler/src/util';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ShowProductImagesDialogComponent } from '../show-product-images-dialog/show-product-images-dialog.component';\nimport { ImageProcessingService } from '../image-processing.service';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-show-product-details',\n  templateUrl: './show-product-details.component.html',\n  styleUrls: ['./show-product-details.component.css']\n})\nexport class ShowProductDetailsComponent implements OnInit {\n\n  productDetails: Product[]= [];\n  displayedColumns: string[] = ['Id', 'Product Name', 'description', 'Product Discounted Price','product Actual Price','Actions'];\n\n  constructor(private productService: ProductService,public imagesDialog: MatDialog,\n    private imageProcesingService: ImageProcessingService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getAllProducts();\n  }\n\n  public getAllProducts(){\n  this.productService.getAllProducts()\n   .pipe(\n    map((x: Product[], i) => x.map((product: Product)=> this.imageProcesingService.createImages(product)))\n   )\n    .subscribe(\n      (resp: Product[])=>{\n        console.log(resp);\n        this.productDetails=resp;\n        \n      },(error: HttpErrorResponse) =>{\n        console.log(error);\n        \n      }\n    );\n\n  }\n  deleteProduct(productId){\n    this.productService.deleteProductDetails(productId).subscribe(\n      (resp)=>{\n       this.getAllProducts();\n        \n      },(error: HttpErrorResponse) =>{\n        console.log(error); \n         \n      }\n    )\n    \n  }\n\n  showImages(product: Product){\n    this.imagesDialog.open(ShowProductImagesDialogComponent,{\n      data: {\n        images: product.productImages \n      },\n      height: '500px',\n      width: '800px'\n    });\n    console.log(product);\n    \n  }\n\n  editProductDetails(productId: number){\n    this.router.navigate(['/addNewProduct', {productId: productId}])  \n\n  }\n\n\n\n}\n","\n<div class=\"mt-5 p-3\"> \n\n<table mat-table [dataSource]=\"productDetails\" class=\"mat-elevation-z8\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"Id\">\n      <th mat-header-cell *matHeaderCellDef> Id </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productId}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Product Name\">\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Product Description </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDescription}} </td>  \n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"Product Discounted Price\">\n      <th mat-header-cell *matHeaderCellDef> Product Discounted Price </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDiscountedPrice}} </td>\n    </ng-container>\n\n     <!-- Symbol Column -->\n     <ng-container matColumnDef=\"product Actual Price\">\n        <th mat-header-cell *matHeaderCellDef> Product Actual Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.productActualPrice}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let element\"> \n          <button mat-icon-button color=\"primary\" (click)=\"showImages(element)\">\n            <mat-icon>images</mat-icon>\n          </button>\n          <button mat-icon-button color=\"primary\" (click)=\"editProductDetails(element.productId)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(element.productId)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n     \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n</div> \n  ","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../_model/product.model';\nimport { NgForm } from '@angular/forms';\nimport { ProductService } from '../_services/product.service';\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FileHandle } from '../_model/file-handle.model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-new-product',\n  templateUrl: './add-new-product.component.html',\n  styleUrls: ['./add-new-product.component.css'] \n})\nexport class AddNewProductComponent implements OnInit {\n isNewProduct=true;\n\n  product: Product = {\n    productId: null,\n    productName: \"\",\n    productDescription: \"\",\n    productDiscountedPrice: 0,\n    productActualPrice: 0,\n    productImages: []\n  }\n\n  constructor(private productService: ProductService,private sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) {} \n\n  ngOnInit(): void {\n    this.product=this.activatedRoute.snapshot.data['product'];\n\n    if(this.product && this.product.productId){\n      this.isNewProduct=false;\n    }\n  }\n\n  addProduct(productForm: NgForm) {\n\n    const productFormData=this.prepareFormData(this.product);\n\n      this.productService.addProduct(productFormData).subscribe(\n        (response: Product) =>{\n          console.log(response);\n          \n        productForm.reset();\n        this.product.productImages = [];\n        \n          \n        },\n        (error: HttpErrorResponse) =>{\n          console.log(error);\n          \n        }\n      );\n\n\n  }\n\n  prepareFormData(product: Product): FormData{\n    const formData = new FormData();\n\n    formData.append(\n      'product',\n      new Blob([JSON.stringify(product)], {type: 'application/json'})\n    );  \n    for(var i =0;i<product.productImages.length;i++){\n      formData.append(\n        'imageFile',\n        product.productImages[i].file,\n        product.productImages[i].file.name\n      );\n    }\n    return formData;\n  }\n\n\n  onFileSelected(event){\n   if(event.target.files){\n    const file=event.target.files[0];\n\n    const fileHandle: FileHandle = {\n      file: file,\n      url: this.sanitizer.bypassSecurityTrustUrl(\n        window.URL.createObjectURL(file)\n      )\n\n    }\n    this.product.productImages.push(fileHandle);\n   }\n    \n\n  }\n  removeImages(i: number){\n    this.product.productImages.splice(i,1);\n  }\n\n  fileDropped(fileHandle: FileHandle){\n    this.product.productImages.push(fileHandle);\n\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"card p-2\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <form #productForm=\"ngForm\" (ngSubmit)=\"addProduct(productForm)\">\n\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Product Name</mat-label>\n                        <input matInput placeholder=\"Product Name\" [(ngModel)]=\"product.productName\" name=\"productName\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Product Description</mat-label>\n                        <input matInput placeholder=\"Product Description\" [(ngModel)]=\"product.productDescription\"\n                            name=\"productDescription\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Product Actual Price</mat-label>\n                        <input matInput placeholder=\"Product Actual Price\" [(ngModel)]=\"product.productActualPrice\"\n                            name=\"productActualPrice\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Product Discounted Price</mat-label>\n                        <input matInput placeholder=\"Product Discounted Price\"\n                            [(ngModel)]=\"product.productDiscountedPrice\" name=\"productDiscountedPrice\">\n                    </mat-form-field>\n\n                    <div align=\"end\">\n                        <button mat-stroked-button color=\"primary\" style=\"margin-right: 3px;\">Clear</button>\n                        <button type=\"submit\" *ngIf=\"isNewProduct\" mat-stroked-button color=\"primary\">Add Product</button>\n                        <button type=\"submit\" *ngIf=\"!isNewProduct\" mat-stroked-button color=\"primary\">Update Product</button>\n                    </div>\n                </form>\n\n\n            </div>\n            <div class=\"col-6\">\n\n\n                <div class=\"dropzone\"\n                appDrag\n                (files)=\"fileDropped($event)\"\n                >\n                    <div class=\"text-wrapper\">\n                        <div class=\"centered\">\n                            Drag and drop your file or\n                            <a (click)=\"selectFile.click() \" class=\"browse-button\">browse</a>\n                            a file\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n                <div>\n                    <input type=\"file\" style=\"display: none;\" multiple value=\"select\" #selectFile\n                        (change)=\"onFileSelected($event)\">\n                </div>\n                <div class=\"mt-5\">\n                    <div class=\"row\">\n                        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\n                            <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\">\n                                <div style=\"position: relative\">\n                                    <span class=\"btn-remove-image\" (click)=\"removeImages(i)\">x</span>\n                                    <img [src]=\"file.url\" width=\"100px\" height=\"100px\">\n\n                                </div>\n\n                            </mat-grid-tile>\n                        </mat-grid-list>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'jwt-youtube-ui';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"color: green; padding: 20px;\">\r\n        <h1>You are Admin</h1>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private userAuthService: UserAuthService, \r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.userAuthService.getToken() !== null) {\r\n      const role = route.data['roles'] as Array<string>;\r\n\r\n      if (role) {\r\n        const match = this.userService.roleMatch(role);\r\n\r\n        if (match) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['/forbidden']);\r\n        //  this.router.navigateByUrl('/abc').then(()=>{\r\n        //   this.router.navigate(['/forbidden']);\r\n        //  });\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.router.navigate(['/login']); \r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserAuthService } from './user-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  PATH_OF_API = 'http://localhost:9090';\r\n\r\n  requestHeader = new HttpHeaders({ 'No-Auth': 'True' });\r\n  constructor(\r\n    private httpclient: HttpClient,\r\n    private userAuthService: UserAuthService\r\n  ) {}\r\n\r\n  public login(loginData) {\r\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\r\n      headers: this.requestHeader,\r\n    });\r\n  }\r\n\r\n  public forUser() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n\r\n  public forAdmin() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  public roleMatch(allowedRoles): boolean {\r\n    let isMatch = false;\r\n    const userRoles: any = this.userAuthService.getRoles();\r\n\r\n    if (userRoles != null && userRoles) {\r\n      for (let i = 0; i < userRoles.length; i++) {\r\n        for (let j = 0; j < allowedRoles.length; j++) {\r\n          if (userRoles[i].roleName === allowedRoles[j]) {\r\n            isMatch = true;\r\n            return isMatch;\r\n          } else {\r\n            return isMatch;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './_auth/auth.guard';\r\nimport { AuthInterceptor } from './_auth/auth.interceptor';\r\nimport { UserService } from './_services/user.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { DragDirective } from './drag.directive';\r\nimport { ShowProductDetailsComponent } from './show-product-details/show-product-details.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { ShowProductImagesDialogComponent } from './show-product-images-dialog/show-product-images-dialog.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AdminComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    ForbiddenComponent,\r\n    AddNewProductComponent,\r\n    DragDirective,\r\n    ShowProductDetailsComponent,\r\n    ShowProductImagesDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi:true\r\n    },\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\nimport { FileHandle } from './_model/file-handle.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appDrag]'\n})\nexport class DragDirective {  \n\n  @Output() files: EventEmitter<FileHandle>= new EventEmitter();\n\n @HostBinding(\"style.background\")  private background=\"#eee\";\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n\n  @HostListener(\"dragover\",[\"$event\"])\n  public onDragOver(evt: DragEvent){\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background=\"#999\";\n\n\n  }\n  @HostListener(\"dragleave\",[\"$event\"])\n  public onDragLeave(evt: DragEvent){\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background=\"#eee\";\n  }\n  @HostListener(\"drop\",[\"$event\"])\n  public onDrop(evt: DragEvent){\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background=\"#eee\";\n\n    let fileHandle: FileHandle = null;\n\n    const file = evt.dataTransfer.files[0];\n    const url =this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(file));\n    \n    fileHandle={file,url};\n    this.files.emit(fileHandle);\n\n  }\n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(\r\n    private userAuthService: UserAuthService, \r\n    private router: Router,\r\n    public userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public isLoggedIn() {\r\n    return this.userAuthService.isLoggedIn();\r\n  }\r\n\r\n  public logout() {\r\n    this.userAuthService.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public isAdmin(){\r\n   return this.userAuthService.isAdmin();\r\n\r\n  }\r\n\r\n  public isUser(){\r\n    return this.userAuthService.isUser();\r\n  }\r\n\r\n \r\n\r\n}\r\n"," <mat-toolbar color=\"primary\">\r\n<span>E-Commerce Application</span>\r\n<span class=\"space-buttons\"></span>\r\n<button *ngIf=\"! isLoggedIn()\" routerLink=\"/login\" mat-raised-button color=\"warn\">Login</button> \r\n<button *ngIf=\"isLoggedIn()\" (click)=\"logout()\" mat-raised-button color=\"primary\">Logout</button>\r\n</mat-toolbar>\r\n\r\n<mat-toolbar color=\"primary\" *ngIf=\"isLoggedIn()\">\r\n  <button mat-raised-button color=\"primary\" routerLink=\"/\">Home</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/addNewProduct\">Add New Product</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/showProductDetails\">Show Products Details</button>\r\n</mat-toolbar>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAuthService {\r\n  constructor() { }\r\n\r\n  public setRoles(roles: []) {\r\n    localStorage.setItem('roles', JSON.stringify(roles)); \r\n  }\r\n\r\n  public getRoles(): [] {\r\n    return JSON.parse(localStorage.getItem('roles'));\r\n  }\r\n\r\n  public setToken(jwtToken: string) {\r\n    localStorage.setItem('jwtToken', jwtToken);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('jwtToken');\r\n\r\n  }\r\n\r\n  public clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return this.getRoles() && this.getToken();\r\n  }\r\n\r\n  public isAdmin() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'Admin';\r\n\r\n\r\n  }\r\n\r\n  public isUser() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'User';\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forbidden',\r\n  templateUrl: './forbidden.component.html',\r\n  styleUrls: ['./forbidden.component.css']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding:20px;\">\r\n        <h1>You are not allowed to access this page</h1>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../_model/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  public addProduct(product: FormData){\n    return this.httpClient.post<Product>(\"http://localhost:9090/addNewProduct\",product);\n  }\n\n  public getAllProducts(){\n    return this.httpClient.get<Product[]>(\"http://localhost:9090/getAllProducts\"); \n  }\n\n  public getProductDetailsById(productId){\n       return this.httpClient.get<Product>(\"http://localhost:9090/getProductDetailsById/\"+productId);\n  }\n\n  public deleteProductDetails(productId: number){\n\n    return this.httpClient.delete(\"http://localhost:9090/deleteProductDetails/\"+productId);\n\n  }\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { AuthGuard } from './_auth/auth.guard';\r\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\r\nimport { ShowProductDetailsComponent } from './show-product-details/show-product-details.component';\r\nimport { ProductResolveService } from './product-resolve.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } }, \r\n  { path: 'user', component: UserComponent, canActivate: [AuthGuard], data: { roles: ['User'] } },\r\n  { path: 'login', component: LoginComponent }, \r\n  { path: 'forbidden', component: ForbiddenComponent },\r\n  {path:'addNewProduct',component:AddNewProductComponent, canActivate: [AuthGuard], data: { roles: ['Admin']},\r\n    resolve:{\r\n      product: ProductResolveService\r\n    }\r\n},\r\n  {path:'showProductDetails',component: ShowProductDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin']}}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private userService: UserService,\r\n    private userAuthService: UserAuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login(loginForm: NgForm) {\r\n    this.userService.login(loginForm.value).subscribe(\r\n      (response: any) => {\r\n        this.userAuthService.setRoles(response.user.role);\r\n        this.userAuthService.setToken(response.jwtToken);\r\n\r\n        const role = response.user.role[0].roleName;\r\n        if (role === 'Admin') {\r\n          this.router.navigate(['/admin']);\r\n        } else {\r\n          this.router.navigate(['/user']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\" style=\"padding: 20px;\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput ngModel name=\"userName\" id=\"userName\" placeholder=\"Username\">\r\n                <mat-hint>Username</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Password</mat-label>\r\n                <input type=\"password\" matInput ngModel name=\"userPassword\" id=\"userPassword\" placeholder=\"Password\">\r\n                <mat-hint>Password</mat-hint>\r\n            </mat-form-field>\r\n\r\n\r\n            <button class=\"w-100\" type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n\r\n            <!-- <input type=\"text\"\r\n                         ngModel\r\n                          name=\"userName\"\r\n                          id=\"userName\"\r\n                           placeholder=\"Enter your username\"\r\n                            class=\"form-control mb-3\">\r\n            \r\n                        <input type=\"password\"\r\n                         ngModel\r\n                          name=\"userPassword\"\r\n                          id=\"userPassword\"\r\n                           placeholder=\"Enter your password\"\r\n                            class=\"form-control mb-3\">\r\n            \r\n                        <input type=\"submit\" value=\"Login\" class=\"btn btn-outline-primary form-control rounded-0\"> -->\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { Product } from './_model/product.model';\nimport { FileHandle } from './_model/file-handle.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageProcessingService {\n\n  constructor(private sanitizer: DomSanitizer) {}  \n\n  public createImages(product: Product){\n     const productImages: any[]=product.productImages; \n\n     const productImagesToFileHandle: FileHandle[] = [];\n\n     for(let i=0;i<productImages.length;i++){\n     const imageFileData = productImages[i];\n     const imageBlob=this.dataURItoBlob(imageFileData.picByte,imageFileData.type);\n     const imageFile=new File([imageBlob],imageFileData.name, {type: imageFileData.type});\n\n     const finalFileHandle :FileHandle = {\n      file: imageFile,\n      url: this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(imageFile))\n     };\n\n     productImagesToFileHandle.push(finalFileHandle); \n     }\n     product.productImages=productImagesToFileHandle;\n     return product;\n\n  }\n\n  public dataURItoBlob(picBytes,imageType){\n      const byteString=window.atob(picBytes);\n      const arrayBuffer=new ArrayBuffer(byteString.length); \n      const int8Array = new Uint8Array(arrayBuffer);\n\n      for(let i=0; i<byteString.length; i++){\n        int8Array[i]=byteString.charCodeAt(i);\n      }\n\n      const blob = new Blob([int8Array],{type: imageType});\n      return blob;\n\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {\r\n    HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userAuthService: UserAuthService,  \r\n    private router:Router) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.headers.get('No-Auth') === 'True') {\r\n      return next.handle(req.clone());\r\n    }\r\n\r\n    const token = this.userAuthService.getToken();\r\n\r\n    if(token){\r\n      req = this.addToken(req, token);\r\n    }\r\n   \r\n    \r\n\r\n    return next.handle(req).pipe(\r\n        catchError(\r\n            (err:HttpErrorResponse) => {\r\n                console.log(err.status);\r\n                if(err.status === 401) {\r\n                    this.router.navigate(['/login']);\r\n                } else if(err.status === 403) {\r\n                    this.router.navigate(['/forbidden']);\r\n                } \r\n                return throwError(\"Some thing is wrong\");\r\n            }\r\n        )\r\n    );\r\n  }\r\n\r\n\r\n  private addToken(request:HttpRequest<any>, token:string) {\r\n      return request.clone(\r\n          {\r\n              setHeaders: {\r\n                  Authorization : `Bearer ${token}`\r\n              }\r\n          }\r\n      );\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}